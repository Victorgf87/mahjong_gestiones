services:
  db:
    image: postgres:latest
    container_name: mi_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
#    environment:
#      - discovery.type=single-node
#      - xpack.security.enabled=true
#      - xpack.security.enrollment.enabled=true
#      - xpack.security.http.ssl.enabled=true
#      - xpack.security.http.ssl.keystore.path=certs/http.p12
#      - ELASTIC_PASSWORD=tucontraseÃ±asegura
#    volumes:
#      - elasticsearch-data:/usr/share/elasticsearch/data
#      - ./certs:/usr/share/elasticsearch/config/certs
#    ports:
#      - 9200:9200
#    healthcheck:
#      test: [ "CMD-SHELL", "curl -s --cacert config/certs/http_ca.crt https://localhost:9200 >/dev/null || exit 1" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.17.2
#    ports:
#      - 5601:5601
#    environment:
#      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
#      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/http_ca.crt
#    volumes:
#      - ./certs:/usr/share/kibana/config/certs
#    depends_on:
#      elasticsearch:
#        condition: service_healthy

#  grafana:
#    image: grafana/grafana:latest
#    ports:
#      - 3100:3000
#    volumes:
#      - grafana-data:/var/lib/grafana

volumes:
  postgres_data:
#  elasticsearch-data:
#  grafana-data: